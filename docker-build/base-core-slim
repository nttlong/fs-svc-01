FROM nttlong/base:ttn.2023.004  as pytorch
ARG TARGETARCH
RUN mkdir /app

RUN cd /

RUN if [ "$TARGETARCH" = "amd64" ]; then \

     pip install torch --extra-index-url https://download.pytorch.org/whl/cpu;\


    fi
RUN python3 -m pip install --upgrade pip
FROM pytorch as req
RUN mkdir -p /app

#RUN apt-get install ffmpeg -y
RUN apt-get install libcairo2 -y
RUN apt-get install libcairo2-dev -y
#RUN apt-get install texlive-full -y
RUN pip3 install manimlib --no-cache-dir
RUN pip install ocrmypdf  --no-cache-dir
RUN pip install fastapi   --no-cache-dir
RUN pip install fastapi-jwt-auth   --no-cache-dir
RUN pip install motor~=3.0.0   --no-cache-dir
RUN pip install pymongo~=4.1.1   --no-cache-dir
RUN pip install PyYAML~=6.0   --no-cache-dir
RUN pip install Jinja2~=3.1.2   --no-cache-dir
RUN pip install watchdog~=2.1.8   --no-cache-dir
RUN pip install humanize~=4.1.0   --no-cache-dir
RUN pip install openxmllib-py3~=2.0.0   --no-cache-dir

RUN pip install pyzmq~=23.0.0   --no-cache-dir
RUN pip install moviepy~=1.0.3  --no-cache-dir
RUN pip install ipython==7.33.0  --no-cache-dir
RUN pip install matplotlib-inline~=0.1.3  --no-cache-dir
RUN pip install opencv-python~=4.5.5.64  --no-cache-dir

RUN pip install pdf2image~=1.16.0  --no-cache-dir

RUN pip install PyMuPDF~=1.19.6  --no-cache-dir
RUN pip install matplotlib~=3.5.2  --no-cache-dir

RUN pip install Cython~=3.0a1  --no-cache-dir

RUN pip install wfastcgi~=3.0.0.0  --no-cache-dir


RUN pip install elasticsearch~=6.8.2  --no-cache-dir


RUN pip install a2wsgi~=1.4.1  --no-cache-dir
RUN pip install python-jose~=3.3.0  --no-cache-dir
RUN pip install passlib~=1.7.4  --no-cache-dir
RUN pip install python-multipart~=0.0.5  --no-cache-dir
RUN pip install pdfminer.six  --no-cache-dir
RUN pip install pdfplumber~=0.7.1  --no-cache-dir
RUN pip install bcrypt  --no-cache-dir
RUN pip install kink~=0.6.5  --no-cache-dir
RUN pip install hypercorn[trio]  --no-cache-dir
RUN pip install icoextract~=0.1.4  --no-cache-dir

RUN pip install pillow-avif-plugin~=1.2.2  --no-cache-dir
RUN pip install tika~=1.24  --no-cache-dir

RUN pip install psutil~=5.9.3  --no-cache-dir

RUN pip install module-dependencies~=0.2.5  --no-cache-dir
RUN pip install PyPDF2~=2.12.1  --no-cache-dir
RUN pip install pdfreader~=0.1.12  --no-cache-dir
RUN pip install opencv-python~=4.5.5.64  --no-cache-dir
RUN pip install pillow-avif-plugin~=1.2.2  --no-cache-dir
RUN pip install gunicorn~=20.1.0  --no-cache-dir
RUN pip install uvicorn[standard]  --no-cache-dir

RUN pip install pika~=1.3.1  --no-cache-dir
RUN pip install pydub~=0.25.1  --no-cache-dir
RUN pip install accelerate~=0.16.0  --no-cache-dir
RUN pip install soundfile~=0.12.1  --no-cache-dir
RUN pip install jiwer~=2.5.1  --no-cache-dir
RUN pip install scikit-image~=0.19.3  --no-cache-dir
RUN pip install predictor~=0.1.2  --no-cache-dir
RUN pip install python-docx~=0.8.11  --no-cache-dir
RUN pip install easyocr  --no-cache-dir
RUN pip install python-dev-tools  --no-cache-dir
RUN pip install textblob  --no-cache-dir
RUN pip install symspellpy  --no-cache-dir
RUN pip install ipython  --no-cache-dir
RUN pip install dataflow  --no-cache-dir
RUN pip install Cython  --no-cache-dir
RUN pip install pycocotools  --no-cache-dir
RUN pip install timm --no-cache-dir
RUN pip install pythonnet --no-cache-dir
RUN pip install PyMuPDF~=1.19.6 --no-cache-dir

RUN pip install moviepy --no-cache-dir


#COPY ./../docker-build/base-core-slim.reg.txt /app
#RUN pip install -r /app/base-core-slim.reg.txt --no-cache-dir
FROM req  as cy
COPY ./../cy_docs ./app/cy_docs
COPY ./../cy_kit ./app/cy_kit
COPY ./../cy_es ./app/cy_es
COPY ./../cy_web ./app/cy_web
FROM cy as final
WORKDIR /app
RUN cd /app
RUN python3 cy_docs/setup.py build_ext --inplace
RUN python3 cy_kit/setup.py build_ext --inplace
RUN python3 cy_es/setup.py build_ext --inplace
RUN python3 cy_web/setup.py build_ext --inplace
RUN cd ..
#docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#docker buildx rm builder
#docker buildx create --name builder --driver docker-container --use
#docker buildx inspect --bootstrap
#docker buildx   build -t nttlong/base-core:ttn.2023.001  --platform=linux/amd64,linux/arm64/v8  ./.. -f base-core-slim
#docker buildx   build -t nttlong/base-core-slim:rc.2023.024  --platform=linux/amd64,linux/arm64/v8  ./.. -f base-core-slim  --push=true --output type=registry