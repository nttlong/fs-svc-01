{{ $configName := $.Values.config.configName -}}
{{ $storageConfigType := $.Values.storageConfig.type -}}
{{ $configuration := $.Values.config}}
{{ $storageConfig := get $.Values.storageConfig $storageConfigType -}}
{{ $configs := get $configuration "dev" -}}
{{ $jsonConfig := toPrettyJson  $configs -}}
{{ $jsonStorageConfig := toPrettyJson  $storageConfig -}}
{{ print "Thou is deploying with config :"}}
{{ print $configName}}
{{ print "All information is bellow :"}}
{{ print $jsonStorageConfig}}
kind: Namespace
apiVersion: v1
metadata:
  name: {{$.Values.namespace}}
  labels:
    name: {{$.Values.namespace}}
---
{{if eq  $.Values.storageConfig.isUse true}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{$.Values.storageConfig.name}}
  namespace: {{$.Values.namespace}}
spec:
  accessModes:
    #- ReadWriteOnce
    - ReadWriteMany
  storageClassName: {{$.Values.storageConfig.className}}
  resources:
    requests:
      storage: {{$.Values.storageConfig.size}}
---
{{end}}
---
{{if ne $.Values.existConfigMap true}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xdoc-job-config
  namespace: {{$.Values.namespace}}
data:
  admin_db_name: {{ $configs.db.admin_db_name }}
  db.authSource: '{{ $configs.db.authSource }}'
  db.host: '{{ $configs.db.host }}'
  db.password: '{{ $configs.db.password }}'
  db.port: '{{ $configs.db.port }}'
  db.username: '{{ $configs.db.username }}'
  elastic_search.prefix_index: lv-codx
  elastic_search.server: '{{ $configs.elastic_search.server }}'
  rabbitmq.port: '{{ $configs.rabbitmq.port }}'
  rabbitmq.server: '{{ $configs.rabbitmq.server }}'
  temp_directory: './brokers/tmp'
---
{{end}}
---
{{- range $key, $value := .Values.deployments }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$value.name}}
  namespace: {{$.Values.namespace}}
  annotations:
    description: "{{$value.description | default $.Values.defaults.description }}"
spec:
  selector:
    matchLabels:
      app: files-{{$value.name}}
  replicas: {{$value.replicas | default $.Values.defaults.replicas}}
  template:
    metadata:
      labels:
        app: files-{{$value.name}}
    spec:


      volumes:
        - name: {{$storageConfig.name}}
        {{if hasKey  $storageConfig "className"}}
          persistentVolumeClaim:
            claimName: {{$storageConfig.name}}
        {{else}}
          nfs:
            server: {{$storageConfig.server}}
            path: {{$storageConfig.directory}}
        {{end}}

      containers:
        - args:
            - python3
            - /app/cy_consumers/files_upload.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
            - admin_db_name= $(admin_db_name)
            - db.username=$(db.username)
            - db.password=$(db.password)
            - db.authSource=$(db.authSource)
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          image: {{ $.Values.image.repository  }}:{{$.Values.image.tag}}

          envFrom:
            - configMapRef:
                name: xdoc-job-config

          name: files-{{$value.name}}
          imagePullPolicy: IfNotPresent

          volumeMounts:
            - mountPath: /app/share-storage
              name:  {{$storageConfig.name}}

---
{{- end }}
---
{{- range $key, $value := .Values.jobs}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{$value.name}}
  namespace: {{$.Values.namespace}}
  annotations:
    description: "{{$value.description | default $.Values.defaults.description }}"
spec:
  template:
    spec:
      volumes:
        - name: {{$storageConfig.name}}
          {{if hasKey  $storageConfig "className"}}
          persistentVolumeClaim:
            claimName: {{$storageConfig.name}}
          {{else}}
          nfs:
            server: {{$storageConfig.server}}
            path: {{$storageConfig.directory}}
          {{end}}
      containers:
      - image: {{ $value.image  }}
        name: {{$value.name}}
        imagePullPolicy: IfNotPresent

        volumeMounts:
          - mountPath: /app/share-storage
            name:  {{$storageConfig.name}}
      restartPolicy: Never
  backoffLimit: 4
---
{{- end }}
#helm uninstall xdoc-job-v16
#helm install xdoc-job-v16 xdoc-job-10
#scp -r root@172.16.13.72:/home/vmadmin/python/v6/file-service-02/docker-build/helm/xdoc-job /nttlong/helm/xdoc-job