FROM nttlong/base-core-slim:rc.2023.028  as git
ARG TARGETARCH
#ADD ./../torch-source /torch-source
RUN mkdir -p /app/pre_test_build && mkdir -p /tmp-source/amd
#RUN pip uninstall torch -y && pip uninstall torchvision -y


COPY ./../docker-build/base-files-slim.req.txt ./base-files-slim.req.txt
COPY ./../docker-build/base-file-slim.deep-learning.reg.txt ./base-file-slim.deep-learning.reg.txt

RUN if [ "$TARGETARCH" = "amd64" ]; then \
    pip uninstall torchvision -y && \
    pip uninstall torch -y && \
    pip install torch --extra-index-url https://download.pytorch.org/whl/cpu --no-cache-dir && \
    pip install torchvision==0.15.0 --extra-index-url https://download.pytorch.org/whl/cpu --no-cache-dir && \
    pip install torchaudio --extra-index-url https://download.pytorch.org/whl/cpu --no-cache-dir && \
    pip install -r base-files-slim.req.txt --no-cache-dir && \
    pip install -r base-file-slim.deep-learning.reg.txt --no-cache-dir;\
    fi
RUN if [ "$TARGETARCH" = "arm64" ]; then \
    pip install -r base-files-slim.req.txt --no-cache-dir && \
    pip install -r base-file-slim.deep-learning.reg.txt --no-cache-dir;\
    fi



ADD ./../pre_test_build /app/pre_test_build
RUN if [ "$TARGETARCH" = "arm64"]; then \
    pip uninstall torch -y && \
    wget https://github.com/KumaTea/pytorch-aarch64/releases/download/v1.11.0/pytorch-1.11.0-py3.9_cpu_0.tar.bz2 && \
    pip install pytorch-1.11.0-py3.9_cpu_0.tar.bz2 && \
    rm pytorch-1.11.0-py3.9_cpu_0.tar.bz2 && \
    python3 /app/pre_test_build/check_torch_version.py; \
    fi
RUN if [ "$TARGETARCH" = "amd64"]; then \
    python3 /app/pre_test_build/check_torch_version.py; \
    fi

RUN python3 /app/pre_test_build/cheK_layout_detection.py
RUN rm -fr /app/pre_test_build
#docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#docker buildx rm builder
#docker buildx create --name builder --driver docker-container --use
#docker buildx inspect --bootstrap
#docker buildx   build -t nttlong/files-service-slim:rc.0.1.1   --platform=linux/amd64,linux/arm64/v8  ./.. -f base-files-slim
#docker buildx   build -t nttlong/files-service-slim:rc.0.2.0  --platform=linux/amd64,linux/arm64/v8  ./.. -f base-files-slim  --push=true --output type=registry