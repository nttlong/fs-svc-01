FROM nttlong/files-service-slim:rc.0.2.0
RUN cd /
RUN mkdir -p /app
COPY ./../cy_consumers /app/cy_consumers
COPY ./../cy_docs /app/cy_docs
COPY ./../cy_es /app/cy_es
COPY ./../cy_kit /app/cy_kit

COPY ./../cy_utils /app/cy_utils
COPY ./../cy_web /app/cy_web
COPY ./../cy_xdoc /app/cy_xdoc
COPY ./../cyx /app/cyx
COPY ./../resource /app/resource
COPY ./../config.yml /app/config.yml
RUN mkdir -p /app/production_test
COPY ./../production_test /app/production_test
RUN mkdir -p /app/pre_test_build
COPY ./../pre_test_build /app/pre_test_build
#RUN cd /app
#RUN python3 cy_es/setup.py build_ext --inplace
#RUN cd /
RUN python3 cy_es/check_cy_es_x.py
ARG TARGETARCH
RUN pip uninstall -y gradio
RUN pip uninstall packaging -y
COPY ./../docker-build/files-service-final-req.txt ./files-service-final-req.txt

RUN pip install -r files-service-final-req.txt  --no-cache-dir




RUN if ["$TARGETARCH" ="amd64"]; then \
    python3 pre_test_build/check_tika_server.py;\
    fi
RUN python3 pre_test_build/check_vn_predict.py
RUN python3 pre_test_build/check_py_vncorenlp.py

WORKDIR /app
RUN cd /app



#docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#docker buildx rm builder
#docker buildx create --name builder --driver docker-container --use
#docker buildx inspect --bootstrap
#docker buildx   build -t nttlong/files-service-final:rc.0.1.3    --platform=linux/amd64,linux/arm64/v8  ./.. -f files-service-final
#docker buildx   build -t nttlong/files-service-final:rc.0.5.2.0  --platform=linux/amd64,linux/arm64/v8  ./.. -f files-service-final  --push=true --output type=registry
#docker buildx   build -t nttlong/files-service-final:rc.0.1.4.adm.test.8  --platform=linux/amd64 ./.. -f files-service-final  --push=true --output type=registry