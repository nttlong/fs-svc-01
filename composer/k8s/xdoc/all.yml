kind: Namespace
apiVersion: v1
metadata:
  name: xdoc-job
  labels:
    name: xdoc-job
#---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xdoc-job-config
  namespace: xdoc-job
data:
  elastic_search.server: "http://192.168.18.36:9200"
  rabbitmq.server: "rabitmq-service.lv-broker"
  elastic_search.prefix_index: "lv-codx"
  rabbitmq.port: "5672"
  host_url: "http://172.16.7.91/lvfile"
  db.host: "192.168.18.36"
  db.port: "27018"
  temp_directory: "./brokers/tmp"
#  db.authSource: admin
#  db.host: 10.200.16.15
#  db.password: Lacviet#123
#  db.port: '27017'
#  db.username: admin
#  elastic_search.prefix_index: qtsc-codx
#  elastic_search.server: http://10.200.16.16:9200
#  host_url: http://172.16.0.240/lvfile
#  rabbitmq.port: '5672'
#  rabbitmq.server: rabbitmq.rabbitmq-dev.svc.cluster.local
#  temp_directory: ./brokers/tmp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-upload
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-upload
  replicas: 1
  template:
    metadata:
      labels:
        app: files-upload
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [
            "sh",
            "-c",
            "chmod -R 777 /app/brokers",
            "chown -R nfsnobody:nfsnobody /app/brokers"
          ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_upload.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)

          image: nttlong/files-service-final:rc.0.1.4
          envFrom:
            - configMapRef:
                name: xdoc-job-config

          name: files-upload
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-generate-image-from-office
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-generate-image-from-office
  replicas: 1
  template:
    metadata:
      labels:
        app: files-generate-image-from-office
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_generate_image_from_office.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4

          name: files-generate-image-from-office
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-generate-image-from-pdf
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-generate-image-from-pdf
  replicas: 1
  template:
    metadata:
      labels:
        app: files-generate-image-from-pdf
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_generate_image_from_pdf.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-generate-image-from-pdf
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-generate-image-from-video
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-generate-image-from-video
  replicas: 1
  template:
    metadata:
      labels:
        app: files-generate-image-from-video
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_generate_image_from_video.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-generate-image-from-video
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-ocr-pdf
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-ocr-pdf
  replicas: 1
  template:
    metadata:
      labels:
        app: files-ocr-pdf
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_ocr_pdf.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-ocr-pdf
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
# OCR file require at least 3GI for hundred pages PDF files

#          resources:
#            requests:
#              memory: "3Gi"
#              cpu: "900m"
#            limits:
#              memory: "3Gi"
#              cpu: "900m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-generate-pdf-from-image
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-generate-pdf-from-image
  replicas: 1
  template:
    metadata:
      labels:
        app: files-generate-pdf-from-image
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_generate_pdf_from_image.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-generate-pdf-from-image
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-generate-thumbs
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-generate-thumbs
  replicas: 1
  template:
    metadata:
      labels:
        app: files-generate-thumbs
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_generate_thumbs.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-generate-thumbs
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-save-custom-thumb
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-save-custom-thumb
  replicas: 1
  template:
    metadata:
      labels:
        app: files-save-custom-thumb
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_save_custom_thumb.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-save-custom-thumb
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-save-default-thumb
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-save-default-thumb
  replicas: 1
  template:
    metadata:
      labels:
        app: files-save-default-thumb
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_save_default_thumb.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-save-default-thumb
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-save-orc-pdf-file
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-save-orc-pdf-file
  replicas: 1
  template:
    metadata:
      labels:
        app: files-save-orc-pdf-file
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_save_orc_pdf_file.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-save-orc-pdf-file
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: files-save-search-engine
  namespace: xdoc-job
spec:
  selector:
    matchLabels:
      app: files-save-search-engine
  replicas: 1
  template:
    metadata:
      labels:
        app: files-save-search-engine
    spec:
      volumes:
        - name: xdoc-temp-storage
          nfs:
            server: 172.16.7.91
            path: /var/nfs_share_dir_for_k8s/xdoc-web
#          nfs:
#            server: 10.200.16.15
#            path: /data/share/xdoc-web
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chmod -R 777 /app/brokers", "chown -R nfsnobody:nfsnobody /app/brokers" ]
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage
      containers:
        - args:
            - python3
            - /app/cy_consumers/files_save_search_engine.py
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db.host=$(db.host)
            - db.port=$(db.port)
#            - db.username=$(db.username)
#            - db.password=$(db.password)
#            - db.authSource=admin
            - temp_directory=$(temp_directory)
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
          envFrom:
            - configMapRef:
                name: xdoc-job-config
          image: nttlong/files-service-final:rc.0.1.4
          name: files-save-search-engine
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /app/brokers
              name: xdoc-temp-storage

#          resources:
#            requests:
#              memory: "1Gi"
#              cpu: "500m"
#            limits:
#              memory: "1Gi"
#              cpu: "500m"

