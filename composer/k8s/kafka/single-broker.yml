apiVersion: v1
kind: Namespace
metadata:
  name: kafka-sn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: kafka-sn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka-broker
    spec:
      containers:
        - env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            #listeners=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
            #listener.security.protocol.map=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            #advertised.listeners=EXTERNAL://[External_IP]:19092,INTERNAL://[Internal_IP]:9092
            #inter.broker.listener.name=INTERNAL
            - name: LISTENERS
              value: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092,PLAINTEXT://0.0.0.0:30992
            - name: ADVERTISED_LISTENERS
              value: INTERNAL://0.0.0.0:9092,EXTERNAL://kafka-broker.kafka-sn:30992,PLAINTEXT://0.0.0.0:30992
            - name: INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: LISTENER_SECURITY_PROTOCOL_MAP
              value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT

            - name: ZOOKEEPER_CONNECT
              value: kafka-zookeeper:2181


            #offsets.topic.replication.factor=1
            #transaction.state.log.replication.factor=1
            #transaction.state.log.min.isr=1
            #num.partitions=1


            - name: BROKER_ID
              value: "0"
#              KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#              KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
#              KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
#              KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#              KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#            - name: KAFKA_ADVERTISED_LISTENERS
#              value: INTERNAL://kafka-broker:19092,EXTERNAL://$(MY_POD_IP):9092 #,DOCKER://host.docker.internal:29092
#            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
#              value: "true"
#            - name: KAFKA_AUTHORIZER_CLASS_NAME
#              value: kafka.security.authorizer.AclAuthorizer

#            - name: KAFKA_INTER_BROKER_LISTENER_NAME
#              value: INTERNAL
            - name: KAFKA_JMX_HOSTNAME
              value: $(MY_POD_IP)
            - name: KAFKA_JMX_PORT
              value: "9999"


#            - name: KAFKA_LOG4J_LOGGERS
#              value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
#            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
#              value: "1"
#            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
#              value: "1"
#            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
#              value: "1"
#            - name: KAFKA_ZOOKEEPER_CONNECT
#              value: kafka-zookeeper:2181
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: kafka-zookeeper:2181


          #image: confluentinc/cp-kafka:7.3.0
          image: bitnami/kafka:latest
          name: kafka-broker
          ports:
            - containerPort: 9092
            - containerPort: 29092
            - containerPort: 9999
          resources: {}
#      hostname: kafka-broker.kafka-sn
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: kafka-sn
spec:
  type: NodePort
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
      nodePort: 30992
#    - name: "29092"
#      port: 29092
#      targetPort: 29092
#    - name: "9999"
#      port: 9999
#      targetPort: 9999
  selector:
    app: kafka-broker
status:
  loadBalancer: {}
