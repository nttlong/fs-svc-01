ARG BASE
#FROM docker.io/tangx/opencv-debian:4.4.0-ffmpeg  as cv2
#RUN ls /;exit 1
FROM ${BASE} as py
FROM ${BASE}
ARG TARGETARCH
#COPY --from=cv2 /usr/local/ /usr/local/
#COPY --from=cv2 /bin /bin
#COPY --from=cv2 /etc /etc
#COPY --from=cv2 /lib /lib

#COPY --from=cv2 /lib64 /lib64
#COPY --from=cv2 /opt /opt
#COPY --from=cv2 /sbin /sbin
#COPY --from=cv2 /sys /sys

RUN apt update
#RUN apt --yes --force-yes install build-essential cmake git pkg-config libgtk-3-dev \
#    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
#    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
#    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
#    libtbb-dev nocache
#RUN mkdir ~/opencv_build && cd ~/opencv_build
#RUN git clone https://github.com/opencv/opencv.git
#RUN git clone https://github.com/opencv/opencv_contrib.git
#RUN cd ~/opencv_build/opencv
#RUN mkdir build && cd build
#RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
#    -D CMAKE_INSTALL_PREFIX=/usr/local \
#    -D INSTALL_C_EXAMPLES=OFF \
#    -D INSTALL_PYTHON_EXAMPLES=OFF \
#    -D OPENCV_GENERATE_PKGCONFIG=ON \
#    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
#    -D BUILD_EXAMPLES=OFF ..
#RUN make -j2
#RUN make install
RUN apt install python3-opencv -y nocache
RUN python3 -m pip install opencv-python --no-cache-dir
RUN python3 -c "import cv2; print(cv2.__version__)"
